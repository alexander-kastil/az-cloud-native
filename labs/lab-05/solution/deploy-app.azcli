env=dev
loc=westeurope
grp=az-native-$env
cosmosDbAcct=az-native-cosmos-nosql-$env
cosmosDBName=food-nosql-$env
endpoint=https://$cosmosDbAcct.documents.azure.com:443
vault=az-native-kv-$env
acr=aznativecontainers$env
acaenv=acaenv-az-native-$env
storageAcct=aznativestorage$env
ai=az-native-$env
aiKey=$(az keyvault secret show --vault-name $vault --name "aiKey" --query  value -o tsv)
echo $aiKey

az group create --name $grp --location $loc

## Task: Create the Physical Design
az cosmosdb create --name $cosmosDbAcct --kind GlobalDocumentDB -g $grp --enable-free-tier true
az cosmosdb sql database create --account-name $cosmosDbAcct --name $cosmosDBName -g $grp --max-throughput 1000
az cosmosdb sql container create --account-name $cosmosDbAcct --database-name $cosmosDBName --name orders --partition-key-path "/customer/Id" -g $grp
az cosmosdb sql container create --account-name $cosmosDbAcct --database-name $cosmosDBName --name order-events --partition-key-path "/id" -g $grp


## Task: Deploy Containerize Apps
pwd=$(az acr credential show -n $acr --query passwords[0].value -o tsv)
echo $pwd
loginSrv=$(az acr list --query "[?name=='$acr'].loginServer" -o tsv) 
echo $loginSrv


# Orders Service
# If you have altered service names you would need to override additional env vars
orderapp=order-service
cosmosKey=$(az keyvault secret show --vault-name $vault --name "cosmosKey" --query  value -o tsv)
echo $cosmosKey
aiConStr=$(az keyvault secret show --vault-name $vault --name "aiConStr" --query  value -o tsv)
echo $aiConStr

az containerapp create -n $orderapp -g $grp \
    --image $acr.azurecr.io/$orderapp:lab \
    --environment $acaenv \
    --target-port 80 --ingress external \
    --min-replicas 0 --max-replicas 1 \
    --registry-server $loginSrv \
    --registry-username $acr \
    --registry-password $pwd \
    --env-vars "CosmosDB__AccountKey=$cosmosKey" "ApplicationInsights__ConnectionString=$aiConStr"

az containerapp ingress cors enable -n $orderapp -g $grp --allowed-origins * --allow-credentials true    
ordersUrl=$(az containerapp show -n $orderapp -g $grp --query properties.configuration.ingress.fqdn -o tsv)    
echo $ordersUrl 

## Order Events Service
processorApp=order-processor
cosmosDBCon=$(az cosmosdb keys list --name $cosmosDbAcct -g $grp --type connection-strings --query connectionStrings[0].connectionString -o tsv)
echo $cosmosDBCon
aiKey=$(az keyvault secret show --vault-name $vault --name "aiKey" --query  value -o tsv)
echo $aiKey

## Order Event Processor to Function Apps
# If you have altered service names you would need to override additional env vars
az functionapp create -n $processorApp -g $grp \
    --storage-account $storageAcct \
    --consumption-plan-location $loc \
    --functions-version 4 \
    --app-insights $ai \
    --app-insights-key $aiKey

az functionapp config appsettings set -n $processorApp -g $grp --settings "CosmosDBConnectionString=$cosmosDBCon"
az functionapp config appsettings set -n $processorApp -g $grp --settings "DBName=food-nosql-"$env
az functionapp config appsettings set -n $processorApp -g $grp --settings "OrdersContainer=orders"
az functionapp config appsettings set -n $processorApp -g $grp --settings "WEBSITE_CLOUD_ROLENAME=Order Events Processor"

cd order-event-processor
func azure functionapp publish $processorApp --csharp
cd ..