env=dev
loc=westeurope
grp=az-native-$env
cosmosDbAcct=az-native-cosmos-nosql-$env
cosmosDBName=food-nosql-$env
endpoint=https://$cosmosDbAcct.documents.azure.com:443
sbNS=aznativesb$env
vault=az-native-kv-$env
acr=aznativecontainers$env
acaenv=acaenv-az-native-$env
storageAcct=aznativestorage$env

pwd=$(az acr credential show -n $acr --query passwords[0].value -o tsv)
loginSrv=$(az acr list --query "[?name=='$acr'].loginServer" -o tsv) 

aiKey=$(az keyvault secret show --vault-name $vault --name "aiKey" --query  value -o tsv)

az group create --name $grp --location $loc

az cosmosdb create --name $cosmosDbAcct --kind GlobalDocumentDB -g $grp --enable-free-tier true
az cosmosdb sql database create --account-name $cosmosDbAcct --name $cosmosDBName -g $grp --max-throughput 1000
az cosmosdb sql container create --account-name $cosmosDbAcct --database-name $cosmosDBName --name orders --partition-key-path "/customer/Id" -g $grp
az cosmosdb sql container create --account-name $cosmosDbAcct --database-name $cosmosDBName --name order-events --partition-key-path "/id" -g $grp

## Catalog Service
aiConStr=$(az keyvault secret show --vault-name $vault --name "aiConStr" --query  value -o tsv)

az containerapp create -n catalog-service -g $grp \
    --image $acr.azurecr.io/catalog-service \
    --environment $acaenv \
    --target-port 80 --ingress external \
    --min-replicas 0 --max-replicas 1 \
    --registry-server $loginSrv \
    --registry-username $acr \
    --registry-password $pwd \
    --env-vars "App__UseSQLite"

az containerapp ingress cors enable -n catalog-service -g $grp --allowed-origins * --allow-credentials true    

catalogUrl=$(az containerapp show -n catalog-service -g $grp --query properties.configuration.ingress.fqdn -o tsv)   

## Orders Service
cosmosKey=$(az keyvault secret show --vault-name $vault --name "cosmosKey" --query  value -o tsv)    

az containerapp create -n orders-service -g $grp \
    --image $acr.azurecr.io/orders-service \
    --environment $acaenv \
    --target-port 80 --ingress external \
    --min-replicas 0 --max-replicas 1 \
    --registry-server $loginSrv \
    --registry-username $acr \
    --registry-password $pwd \
    --env-vars "CosmosDB__AccountKey=$cosmosKey" 

az containerapp ingress cors enable -n orders-service -g $grp --allowed-origins * --allow-credentials true    
    
ordersUrl=$(az containerapp show -n orders-service -g $grp --query properties.configuration.ingress.fqdn -o tsv)    

## Order Event Processor
az containerapp create -n order-events-processor -g $grp \
    --image $acr.azurecr.io/order-events-processor \
    --environment $acaenv \
    --target-port 80 --ingress external \
    --min-replicas 0 --max-replicas 1 \
    --registry-server $loginSrv \
    --registry-username $acr \
    --registry-password $pwd \
    --env-vars "CosmosDBConnectionString=$sbConStr" 

## Shop UI
az containerapp create -n shop-ui -g $grp \
    --image $acr.azurecr.io/shop-ui \
    --environment $acaenv \
    --target-port 80 --ingress external \
    --min-replicas 0 --max-replicas 1 \
    --registry-server $loginSrv \
    --registry-username $acr \
    --registry-password $pwd \
    --env-vars "ENV_CATALOG_API_URL=https://$catalogUrl" "ENV_ORDERS_API_URL=https://$ordersUrl"     