env=dev
grp=az-native-$env
loc=westeurope
cfg=az-native-config-$env
mi=az-native-func-$env
acr=aznativecontainers$env
acaenv=acaenv-az-native-$env
funcapp=config-mi-func-$env
imgFuncapp=$acr.azurecr.io/$funcapp

az group create -n $grp -l $loc

az appconfig create -n $cfg -g $grp -l $loc --sku free
az appconfig kv set -n $cfg --key "AppConfigValue" --value "Value from App Config" -y
configEP=$(az appconfig list -g $grp --query "[?name=='$cfg'].endpoint" -o tsv)
appConfigCS=$(az appconfig credential list --name $cfg --query [0].connectionString -o tsv)

echo "Config Endpoint: $configEP"
echo "Config Connection String: $appConfigCS"

# using env vars
cd config-mi-func
az acr build --image $imgFuncapp:v1 --registry $acr --file dockerfile .
cd ..

pwd=$(az acr credential show -n $acr --query passwords[0].value -o tsv)
loginSrv=$(az acr list --query "[?name=='$acr'].loginServer" -o tsv) 

az containerapp create -n $funcapp -g $grp --image $imgFuncapp:v1 \
    --environment $acaenv \
    --target-port 80 --ingress external \
    --min-replicas 0 --max-replicas 1 \
    --registry-server $loginSrv \
    --registry-username $acr \
    --registry-password $pwd \
    --env-vars "CustomConfigValue='ACA Env Vars Value'"

# using azure app configuration service 
# update existing container app

az containerapp update -n $funcapp -g $grp \
    --replace-env-vars AppConfigConnection=$appConfigCS UseAppConfig=true