env=dev
loc=westeurope
grp=az-native-$env
acr=aznativecontainers$env
acaenv=acaenv-az-native-$env
kv=az-native-kv-$env
mi=aznative-mi-$env
app=kvapi-$env

az group create -n $grp -l $loc

az keyvault create -n $kv -g $grp -l $loc --sku standard
az keyvault list  -g $grp
az keyvault secret set --vault-name $kv --name "mi-secret" --value "managed identity secret"

az identity create --name $mi -g $grp
principalId=$(az identity show -g $grp --name $mi --query "principalId" -o tsv)
clientId=$(az identity show -g $grp --name $mi --query "clientId" -o tsv)
miId=$(az identity show -g $grp --name $mi --query "id" -o tsv)

# assign permissions to the managed identity
az keyvault set-policy -n $kv --object-id $principalId --secret-permissions get list

# ensure that the image has been pushed to the registry
img=$acr.azurecr.io/kv-api:v1
az acr build --image $img --registry $acr --file dockerfile .

# get credentials for the registry
pwd=$(az acr credential show -n $acr --query passwords[0].value -o tsv)
loginSrv=$(az acr list --query "[?name=='$acr'].loginServer" -o tsv) 

# create the container app
az containerapp create -n $app -g $grp --image $img \
        --environment $acaenv \
        --target-port 80 --ingress external \
        --min-replicas 0 --max-replicas 1 \
        --user-assigned $miId \
        --registry-server $loginSrv \
        --registry-username $acr \
        --registry-password $pwd \
        --env-vars KEY_VAULT_NAME=$kv AZURE_CLIENT_ID=$clientId