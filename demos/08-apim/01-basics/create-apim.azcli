env=dev
grp=az-native-$env
loc=westeurope
acr=aznative$env
apim=food-$env
acaenv=aznative-$env
ws=aznativelogs-$env
mail=alexander.pajer@integrations.at
publisher=integrations
appApi=config-api
apiImg=$acr.azurecr.io/$appApi

az group create -n $grp -l $loc

# api management
az apim create -n $apim -g $grp -l $loc --publisher-email $mail --publisher-name $publisher --sku-name Consumption 

# acr
az acr create -g $grp -n $acr --sku Basic
az acr login -n $acr
az acr update -n $acr --admin-enabled true

# Log Analytics Workspace
wsId=$(az monitor log-analytics workspace create -g $grp --workspace-name $ws --query  id -o tsv)
customerId=$(az monitor log-analytics workspace show -g $grp --workspace-name $ws --query customerId -o tsv)
key=$(az monitor log-analytics workspace get-shared-keys -g $grp --workspace-name $ws --query primarySharedKey -o tsv)

# ACA
az containerapp env create -n $acaenv -g $grp -l $loc  --logs-workspace-id $customerId  --logs-workspace-key $key

# Deploy the config api container
pwd=$(az acr credential show -n $acr --query passwords[0].value -o tsv)
loginSrv=$(az acr list --query "[?name=='$acr'].loginServer" -o tsv) 

apiUrl=$(az containerapp create -n $appApi -g $grp --image $apiImg \
    --environment $acaenv \
    --target-port 80 --ingress external \
    --min-replicas 0 --max-replicas 2 \
    --registry-server $loginSrv \
    --registry-username $acr \
    --registry-password $pwd \
    --query properties.configuration.ingress.fqdn -o tsv)

az containerapp ingress cors enable -n $appApi -g $grp --allowed-origins * --allow-credentials true
