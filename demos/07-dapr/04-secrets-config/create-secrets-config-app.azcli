env=dev
loc=westeurope
grp=az-native-$env
acr=aznativecontainers$env
acaenv=acaenv-az-native-$env
vault=az-native-kv-$env
cfg=az-native-config-$env
mi=az-native-mi-$env
img=$acr.azurecr.io/secrets-config-dapr:v1
app=secrets-config-dapr-$env

az group create -n $grp -l $loc

# create managed identity and get metadata
az identity create --name $mi -g $grp
clientId=$(az identity show -g $grp --name $mi --query "clientId" -o tsv)
principalId=$(az identity show -g $grp --name $mi --query "principalId" -o tsv)
miId=$(az identity show -g $grp --name $mi --query "id" -o tsv)

# create a kv
az keyvault create -n $vault -g $grp -l $loc --sku standard
az keyvault list  -g $grp
az keyvault secret set --vault-name $vault --name "dapr-secret" --value "dapr secret"

# create the app config store
az appconfig create -n $cfg -g $grp -l $loc --sku free
az appconfig identity assign -g $grp -n $cfg --identities $miId

# assign permissions to the managed identity
az keyvault set-policy -n $vault --object-id $principalId --secret-permissions get 

# ensure that the image has been pushed to the registry
az acr build --image $img --registry $acr --file dockerfile .

# get credentials for the registry
pwd=$(az acr credential show -n $acr --query passwords[0].value -o tsv)
loginSrv=$(az acr list --query "[?name=='$acr'].loginServer" -o tsv) 

# create the container app
az containerapp create -n $app -g $grp --image $img \
        --environment $acaenv \
        --target-port 80 --ingress external \
        --min-replicas 0 --max-replicas 1 \
        --user-assigned $miId \
        --registry-server $loginSrv \
        --registry-username $acr \
        --registry-password $pwd \
        --env-vars KEY_VAULT_NAME=$kv AZURE_CLIENT_ID=$clientId